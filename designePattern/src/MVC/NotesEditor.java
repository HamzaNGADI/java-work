/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package MVC;

import java.util.ArrayList;

/**
 * Editeur graphique de notes
 *
 * @author riviere
 */
public class NotesEditor extends javax.swing.JDialog {

    private ArrayList<Double> notes;

    /**
     * Creates new form NotesEditor
     */
    public NotesEditor() {
        initComponents();
        this.setModalityType(ModalityType.APPLICATION_MODAL);
        jLabel2.setVisible(false);
    }
    
    public NotesEditor(ArrayList<Double> notes){
        initComponents();
        this.notes=notes;
        this.setModal(true);
        jLabel2.setVisible(false);
        initialiserZoneTexte();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();

        getContentPane().setLayout(null);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("Entrez des notes comprises entre 0 et 20, séparées par des ';'");
        jLabel1.setToolTipText("");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(10, 10, 380, 20);

        jButton1.setText("OK");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(83, 210, 80, 23);

        jButton2.setText("Annuler");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2);
        jButton2.setBounds(200, 210, 90, 23);

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane2.setViewportView(jTextArea1);

        getContentPane().add(jScrollPane2);
        jScrollPane2.setBounds(70, 40, 230, 130);

        jLabel2.setFont(new java.awt.Font("Tahoma", 3, 10)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 0, 0));
        jLabel2.setText("Au moins une note comprise entre 0 et 20 doit être entrée");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(30, 180, 320, 20);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Valider les notes entrees par l'utilisateur
     *
     * @param evt
     */
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        extractNotes();
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * Annuler et quitter l'editeur
     *
     * @param evt
     */
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        notes = null;
        this.setVisible(false);
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * Methode qui extrait depuis la zone de texte les notes entrees par
     * l'utilisateur et les verifie (>=0 et <=20; nbr de notes > 0)
     */
    private void extractNotes() {
        notes = new ArrayList<>();
        String allNotes = jTextArea1.getText();
        String[] tabNotes = allNotes.split(";");
        for (String n : tabNotes) {
            Double trans = Double.parseDouble(n);
            if ((trans >= 0) && (trans <= 20)) {
                notes.add(trans);
            }
        }
        if (notes.isEmpty()) {
            jLabel2.setVisible(true);
        } else {
            this.setVisible(false);
        }
    }

    public ArrayList<Double> getNotes() {
        return notes;
    }
    
    private void initialiserZoneTexte(){
        String allNotes="";        
        for(Double note:notes){
            allNotes=allNotes.concat(note+";");
        }
        jTextArea1.setText(allNotes);
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables
}
