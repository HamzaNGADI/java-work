package server.exo2;


/**
* server/exo2/calculPOA.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from server.idl
* lundi 15 janvier 2018 17 h 57 WET
*/

public abstract class calculPOA extends org.omg.PortableServer.Servant
 implements server.exo2.calculOperations, org.omg.CORBA.portable.InvokeHandler
{

  // Constructors

  private static java.util.Hashtable _methods = new java.util.Hashtable ();
  static
  {
    _methods.put ("_get_memoire", new java.lang.Integer (0));
    _methods.put ("ajouteMemoire", new java.lang.Integer (1));
    _methods.put ("soustraitMemoire", new java.lang.Integer (2));
    _methods.put ("multiplieMemoire", new java.lang.Integer (3));
    _methods.put ("miseAZero", new java.lang.Integer (4));
    _methods.put ("diviseMemoire", new java.lang.Integer (5));
    _methods.put ("incrementer", new java.lang.Integer (6));
    _methods.put ("decrementer", new java.lang.Integer (7));
  }

  public org.omg.CORBA.portable.OutputStream _invoke (String $method,
                                org.omg.CORBA.portable.InputStream in,
                                org.omg.CORBA.portable.ResponseHandler $rh)
  {
    org.omg.CORBA.portable.OutputStream out = null;
    java.lang.Integer __method = (java.lang.Integer)_methods.get ($method);
    if (__method == null)
      throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);

    switch (__method.intValue ())
    {
       case 0:  // server/exo2/calcul/_get_memoire
       {
         double $result = (double)0;
         $result = this.memoire ();
         out = $rh.createReply();
         out.write_double ($result);
         break;
       }

       case 1:  // server/exo2/calcul/ajouteMemoire
       {
         double donnee = in.read_double ();
         this.ajouteMemoire (donnee);
         out = $rh.createReply();
         break;
       }

       case 2:  // server/exo2/calcul/soustraitMemoire
       {
         double donnee = in.read_double ();
         this.soustraitMemoire (donnee);
         out = $rh.createReply();
         break;
       }

       case 3:  // server/exo2/calcul/multiplieMemoire
       {
         double donnee = in.read_double ();
         this.multiplieMemoire (donnee);
         out = $rh.createReply();
         break;
       }

       case 4:  // server/exo2/calcul/miseAZero
       {
         this.miseAZero ();
         out = $rh.createReply();
         break;
       }

       case 5:  // server/exo2/calcul/diviseMemoire
       {
         try {
           double donnee = in.read_double ();
           this.diviseMemoire (donnee);
           out = $rh.createReply();
         } catch (server.exo2.divisionParZero $ex) {
           out = $rh.createExceptionReply ();
           server.exo2.divisionParZeroHelper.write (out, $ex);
         }
         break;
       }

       case 6:  // server/exo2/calcul/incrementer
       {
         org.omg.CORBA.IntHolder data = new org.omg.CORBA.IntHolder ();
         data.value = in.read_long ();
         this.incrementer (data);
         out = $rh.createReply();
         out.write_long (data.value);
         break;
       }

       case 7:  // server/exo2/calcul/decrementer
       {
         org.omg.CORBA.IntHolder data = new org.omg.CORBA.IntHolder ();
         data.value = in.read_long ();
         this.decrementer (data);
         out = $rh.createReply();
         out.write_long (data.value);
         break;
       }

       default:
         throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);
    }

    return out;
  } // _invoke

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:server/exo2/calcul:1.0"};

  public String[] _all_interfaces (org.omg.PortableServer.POA poa, byte[] objectId)
  {
    return (String[])__ids.clone ();
  }

  public calcul _this() 
  {
    return calculHelper.narrow(
    super._this_object());
  }

  public calcul _this(org.omg.CORBA.ORB orb) 
  {
    return calculHelper.narrow(
    super._this_object(orb));
  }


} // class calculPOA
