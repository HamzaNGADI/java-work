package server;


/**
* server/gestionabonnesPOA.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from server.idl
* mercredi 24 janvier 2018 18 h 17 WET
*/

public abstract class gestionabonnesPOA extends org.omg.PortableServer.Servant
 implements server.gestionabonnesOperations, org.omg.CORBA.portable.InvokeHandler
{

  // Constructors

  private static java.util.Hashtable _methods = new java.util.Hashtable ();
  static
  {
    _methods.put ("_get_liste_abonnes", new java.lang.Integer (0));
    _methods.put ("creation_abonne", new java.lang.Integer (1));
    _methods.put ("resilier_abonne", new java.lang.Integer (2));
    _methods.put ("rechercher_abonne", new java.lang.Integer (3));
  }

  public org.omg.CORBA.portable.OutputStream _invoke (String $method,
                                org.omg.CORBA.portable.InputStream in,
                                org.omg.CORBA.portable.ResponseHandler $rh)
  {
    org.omg.CORBA.portable.OutputStream out = null;
    java.lang.Integer __method = (java.lang.Integer)_methods.get ($method);
    if (__method == null)
      throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);

    switch (__method.intValue ())
    {
       case 0:  // server/gestionabonnes/_get_liste_abonnes
       {
         server.abonne $result[] = null;
         $result = this.liste_abonnes ();
         out = $rh.createReply();
         server.table_abonneHelper.write (out, $result);
         break;
       }

       case 1:  // server/gestionabonnes/creation_abonne
       {
         try {
           int numero = in.read_long ();
           String nom = in.read_string ();
           String prenom = in.read_string ();
           server.type_adresse adresse = server.type_adresseHelper.read (in);
           server.type_abonnement abonnement = server.type_abonnementHelper.read (in);
           server.abonneHolder ref = new server.abonneHolder ();
           ref.value = server.abonneHelper.read (in);
           this.creation_abonne (numero, nom, prenom, adresse, abonnement, ref);
           out = $rh.createReply();
           server.abonneHelper.write (out, ref.value);
         } catch (server.dejaExistant $ex) {
           out = $rh.createExceptionReply ();
           server.dejaExistantHelper.write (out, $ex);
         }
         break;
       }

       case 2:  // server/gestionabonnes/resilier_abonne
       {
         try {
           int numero = in.read_long ();
           this.resilier_abonne (numero);
           out = $rh.createReply();
         } catch (server.numeroInconnu $ex) {
           out = $rh.createExceptionReply ();
           server.numeroInconnuHelper.write (out, $ex);
         }
         break;
       }

       case 3:  // server/gestionabonnes/rechercher_abonne
       {
         try {
           int numero = in.read_long ();
           server.abonneHolder ref = new server.abonneHolder ();
           ref.value = server.abonneHelper.read (in);
           this.rechercher_abonne (numero, ref);
           out = $rh.createReply();
           server.abonneHelper.write (out, ref.value);
         } catch (server.numeroInconnu $ex) {
           out = $rh.createExceptionReply ();
           server.numeroInconnuHelper.write (out, $ex);
         }
         break;
       }

       default:
         throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);
    }

    return out;
  } // _invoke

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:server/gestionabonnes:1.0"};

  public String[] _all_interfaces (org.omg.PortableServer.POA poa, byte[] objectId)
  {
    return (String[])__ids.clone ();
  }

  public gestionabonnes _this() 
  {
    return gestionabonnesHelper.narrow(
    super._this_object());
  }

  public gestionabonnes _this(org.omg.CORBA.ORB orb) 
  {
    return gestionabonnesHelper.narrow(
    super._this_object(orb));
  }


} // class gestionabonnesPOA
