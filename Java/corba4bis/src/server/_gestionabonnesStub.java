package server;


/**
* server/_gestionabonnesStub.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from server.idl
* mercredi 24 janvier 2018 18 h 17 WET
*/

public class _gestionabonnesStub extends org.omg.CORBA.portable.ObjectImpl implements server.gestionabonnes
{

  public server.abonne[] liste_abonnes ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("_get_liste_abonnes", true);
                $in = _invoke ($out);
                server.abonne $result[] = server.table_abonneHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return liste_abonnes (        );
            } finally {
                _releaseReply ($in);
            }
  } // liste_abonnes

  public void creation_abonne (int numero, String nom, String prenom, server.type_adresse adresse, server.type_abonnement abonnement, server.abonneHolder ref) throws server.dejaExistant
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("creation_abonne", true);
                $out.write_long (numero);
                $out.write_string (nom);
                $out.write_string (prenom);
                server.type_adresseHelper.write ($out, adresse);
                server.type_abonnementHelper.write ($out, abonnement);
                server.abonneHelper.write ($out, ref.value);
                $in = _invoke ($out);
                ref.value = server.abonneHelper.read ($in);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                if (_id.equals ("IDL:server/dejaExistant:1.0"))
                    throw server.dejaExistantHelper.read ($in);
                else
                    throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                creation_abonne (numero, nom, prenom, adresse, abonnement, ref        );
            } finally {
                _releaseReply ($in);
            }
  } // creation_abonne

  public void resilier_abonne (int numero) throws server.numeroInconnu
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("resilier_abonne", true);
                $out.write_long (numero);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                if (_id.equals ("IDL:server/numeroInconnu:1.0"))
                    throw server.numeroInconnuHelper.read ($in);
                else
                    throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                resilier_abonne (numero        );
            } finally {
                _releaseReply ($in);
            }
  } // resilier_abonne

  public void rechercher_abonne (int numero, server.abonneHolder ref) throws server.numeroInconnu
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("rechercher_abonne", true);
                $out.write_long (numero);
                server.abonneHelper.write ($out, ref.value);
                $in = _invoke ($out);
                ref.value = server.abonneHelper.read ($in);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                if (_id.equals ("IDL:server/numeroInconnu:1.0"))
                    throw server.numeroInconnuHelper.read ($in);
                else
                    throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                rechercher_abonne (numero, ref        );
            } finally {
                _releaseReply ($in);
            }
  } // rechercher_abonne

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:server/gestionabonnes:1.0"};

  public String[] _ids ()
  {
    return (String[])__ids.clone ();
  }

  private void readObject (java.io.ObjectInputStream s) throws java.io.IOException
  {
     String str = s.readUTF ();
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     org.omg.CORBA.Object obj = orb.string_to_object (str);
     org.omg.CORBA.portable.Delegate delegate = ((org.omg.CORBA.portable.ObjectImpl) obj)._get_delegate ();
     _set_delegate (delegate);
   } finally {
     orb.destroy() ;
   }
  }

  private void writeObject (java.io.ObjectOutputStream s) throws java.io.IOException
  {
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     String str = orb.object_to_string (this);
     s.writeUTF (str);
   } finally {
     orb.destroy() ;
   }
  }
} // class _gestionabonnesStub
